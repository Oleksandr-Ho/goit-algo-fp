"""Завдання 7:

Програмно реалізовано алгоритм для моделювання кидання двох ігрових кубиків і побудови таблиці сум 
та їх імовірностей за допомогою методу Монте-Карло.

Код виконується та імітує велику кількість кидків кубиків, обчислює суми чисел, які випадають на кубиках, 
підраховує, скільки разів кожна можлива сума з’являється у процесі симуляції, і визначає ймовірність кожної можливої суми.

Створено таблицю або графік, який відображає ймовірності кожної суми, виявлені за допомогою методу Монте-Карло.

Зроблено висновки щодо правильності розрахунків шляхом порівняння отриманих за допомогою методу Монте-Карло результатів 
та результатів аналітичних розрахунків. Висновки оформлено у вигляді файлу readme.md фінального завдання."""


import random
from collections import Counter
import pandas as pd

# Кількість кидків кубиків
num_rolls = 1_000_000

# Симуляція кидків
sums = [random.randint(1, 6) + random.randint(1, 6) for _ in range(num_rolls)]

# Підрахунок кількості випадінь кожної суми
sum_counts = Counter(sums)

# Обчислення ймовірностей кожної суми
probabilities = {sum_val: count / num_rolls for sum_val, count in sum_counts.items()}

# Сортування за сумами
sorted_probabilities = dict(sorted(probabilities.items()))

# Створення DataFrame для кращого відображення результатів
df_probabilities = pd.DataFrame(list(sorted_probabilities.items()), columns=['Сума', 'Ймовірність'])

# Форматування стовпця Ймовірність для відображення у відсотках
df_probabilities['Ймовірність'] = df_probabilities['Ймовірність'].apply(lambda x: f"{x*100:.2f}%")

print(df_probabilities)